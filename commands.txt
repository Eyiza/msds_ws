Serial Communication:
  ros2 run msds_firmware simple_serial_transmitter.py 
  ros2 run msds_firmware simple_serial_transmitter --ros-args -p port:=/dev/ttyACM0
  If port error:
      - Close Serial Monitor or Conflicting Apps
  To turn LED Light 13 On:
      ros2 topic pub /serial_transmitter std_msgs/msg/String "data: '1'"
  To turn LED Light 13 Off:
      ros2 topic pub /serial_transmitter std_msgs/msg/String "data: '0'"

  ros2 run msds_firmware simple_serial_receiver.py --ros-args -p port:=/dev/ttyACM1
  ros2 topic echo /serial_receiver

ros2 launch msds_description display.launch.py
ros2 launch msds_description gazebo.launch.py
ros2 launch msds_controller controller.launch.py
ros2 launch msds_bringup simulated_robot.launch.py
ros2 launch msds_bringup real_robot.launch.py
ros2 launch msds_bringup real_robot.launch.py port:=/dev/ttyUSB1

ros2 topic pub /msds_controller/reference geometry_msgs/msg/TwistStamped "header:
  stamp:
    sec: 0
    nanosec: 0
  frame_id: ''
twist:
  linear:
    x: 0.5
    y: 0.0
    z: 0.0
  angular:
    x: 0.0
    y: 0.0
    z: 0.0" 

scp -r src/ eyiza@192.168.1.154:/home/eyiza/msds_ws
export ROS_DOMAIN_ID=2
ls -l /dev/ttyUSB*
sudo usermod -a -G dialout $USER
newgrp plugdev  
sudo chmod 666 /dev/ttyUSB0

sudo apt install ros-jazzy-teleop-twist-keyboard
ros2 run teleop_twist_keyboard teleop_twist_keyboard
ros2 run teleop_twist_keyboard teleop_twist_keyboard --ros-args -r cmd_vel:=/your_cmd_vel_topic
ros2 run teleop_twist_keyboard teleop_twist_keyboard --ros-args -r cmd_vel:=/msds_controller/reference

colcon build --parallel-workers 2
ros2 run tf2_tools view_frames


TODO:
uncomment imu
Manual Control with teleop_twist_keyboard
add esp to the raspberry rules
verify what to do with the odometry data
move SLAM folders
msds_controller in both hardare interface launch and real_robot??
remove imu from the hardware interface launch??
ekf for a omnidirection robot
Local localization