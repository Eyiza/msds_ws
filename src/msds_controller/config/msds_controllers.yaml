controller_manager:
  ros__parameters:
    update_rate: 100 # This means the controller will executed 100Hz i.e 10 times per second
    use_sim_time: true # This means the controller will use the simulation time instead of the system time

    # Add the name of the controllers you want to load and use for your robot

    msds_controller:
      type: diff_drive_controller/DiffDriveController

    joint_state_broadcaster: # Responsible for publishing the current state of each joint of the robot into the /joint_states topic
      type: joint_state_broadcaster/JointStateBroadcaster

    simple_velocity_controller: # Responsible for controlling the velocity of the robot
      type: velocity_controllers/JointGroupVelocityController


# This is the configuration for the diff_drive_controller
msds_controller:
  ros__parameters:
    type        : diff_drive_controller/DiffDriveController
    use_stamped_vel: true # Inorder to use the velocity command in the form of a TwistStamped message

    # The name of the joints that will be controlled by this controller
    left_wheel_names  : ['wheel_left_joint']
    right_wheel_names : ['wheel_right_joint']

    publish_rate: 50.0 # 50Hz which represents the rate at which the controller will publish the data

    # Vectors representing the covariance of the pose and twist
    pose_covariance_diagonal : [0.001, 0.001, 1.0e-3, 1.0e-3, 1.0e-3, 0.01]
    twist_covariance_diagonal: [0.001, 0.001, 1.0e-3, 1.0e-3, 1.0e-3, 0.01]

    # The distance between the wheels and the radius of the wheels
    wheel_separation : 0.17
    wheel_radius : 0.033

    # Multipliers are used to scale the values of the wheel separation and radius
    wheel_separation_multiplier: 1.0
    left_wheel_radius_multiplier: 1.0
    right_wheel_radius_multiplier: 1.0

    # Velocity commands timeout [s], default 0.5
    cmd_vel_timeout: 0.5 # If within this time the controller does not receive a new command, it will stop the robot

    # Base frame_id
    base_frame_id: base_footprint #default: base_link

    # Publish limited velocity
    publish_limited_velocity: true

    # Publish wheel data
    publish_wheel_data: true # Publish he position and rotation of the wheels

    # Publish to TF directly or not
    enable_odom_tf: true

    # Velocity and acceleration limits
    # Whenever a min_* is unspecified, default to -max_*
    linear:
      x:
        has_velocity_limits    : true
        max_velocity           : 1.0  # m/s
        min_velocity           : -0.5 # m/s
        has_acceleration_limits: true
        max_acceleration       : 0.8  # m/s^2
        min_acceleration       : -0.4 # m/s^2
        has_jerk_limits        : false # Jerk is the rate of change of acceleration
        max_jerk               : 5.0  # m/s^3
        
    angular:
      z:
        has_velocity_limits    : true
        max_velocity           : 1.7  # rad/s
        has_acceleration_limits: true
        max_acceleration       : 1.5  # rad/s^2
        has_jerk_limits        : false
        max_jerk               : 2.5  # rad/s^3


# This is the configuration for the simple_velocity_controller
simple_velocity_controller:
  ros__parameters:
    joints: # Joints of the robot that will be controlled by this controller
      - wheel_left_joint
      - wheel_right_joint